{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JwksClient = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _request = require('request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nvar _ArgumentError = require('./errors/ArgumentError');\n\nvar _ArgumentError2 = _interopRequireDefault(_ArgumentError);\n\nvar _JwksError = require('./errors/JwksError');\n\nvar _JwksError2 = _interopRequireDefault(_JwksError);\n\nvar _SigningKeyNotFoundError = require('./errors/SigningKeyNotFoundError');\n\nvar _SigningKeyNotFoundError2 = _interopRequireDefault(_SigningKeyNotFoundError);\n\nvar _utils = require('./utils');\n\nvar _wrappers = require('./wrappers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar JwksClient = exports.JwksClient = function () {\n  function JwksClient(options) {\n    var _this = this;\n\n    _classCallCheck(this, JwksClient);\n\n    this.getSigningKey = function (kid, cb) {\n      _this.logger('Fetching signing key for \\'' + kid + '\\'');\n\n      _this.getSigningKeys(function (err, keys) {\n        if (err) {\n          return cb(err);\n        }\n\n        var key = keys.find(function (k) {\n          return k.kid === kid;\n        });\n\n        if (key) {\n          return cb(null, key);\n        } else {\n          _this.logger('Unable to find a signing key that matches \\'' + kid + '\\'');\n\n          return cb(new _SigningKeyNotFoundError2.default('Unable to find a signing key that matches \\'' + kid + '\\''));\n        }\n      });\n    };\n\n    this.options = _extends({\n      rateLimit: false,\n      cache: false,\n      strictSsl: true\n    }, options);\n    this.logger = (0, _debug2.default)('jwks'); // Initialize wrappers.\n\n    if (this.options.rateLimit) {\n      this.getSigningKey = (0, _wrappers.rateLimitSigningKey)(this, options);\n    }\n\n    if (this.options.cache) {\n      this.getSigningKey = (0, _wrappers.cacheSigningKey)(this, options);\n    }\n  }\n\n  _createClass(JwksClient, [{\n    key: 'getKeys',\n    value: function getKeys(cb) {\n      var _this2 = this;\n\n      this.logger('Fetching keys from \\'' + this.options.jwksUri + '\\'');\n      (0, _request2.default)({\n        json: true,\n        uri: this.options.jwksUri,\n        strictSSL: this.options.strictSsl,\n        headers: this.options.requestHeaders\n      }, function (err, res) {\n        if (err || res.statusCode < 200 || res.statusCode >= 300) {\n          _this2.logger('Failure:', res && res.body || err);\n\n          if (res) {\n            return cb(new _JwksError2.default(res.body && (res.body.message || res.body) || res.statusMessage || 'Http Error ' + res.statusCode));\n          }\n\n          return cb(err);\n        }\n\n        _this2.logger('Keys:', res.body.keys);\n\n        return cb(null, res.body.keys);\n      });\n    }\n  }, {\n    key: 'getSigningKeys',\n    value: function getSigningKeys(cb) {\n      var _this3 = this;\n\n      this.getKeys(function (err, keys) {\n        if (err) {\n          return cb(err);\n        }\n\n        if (!keys || !keys.length) {\n          return cb(new _JwksError2.default('The JWKS endpoint did not contain any keys'));\n        }\n\n        var signingKeys = keys.filter(function (key) {\n          return key.use === 'sig' && key.kty === 'RSA' && key.kid && (key.x5c && key.x5c.length || key.n && key.e);\n        }).map(function (key) {\n          if (key.x5c && key.x5c.length) {\n            return {\n              kid: key.kid,\n              nbf: key.nbf,\n              publicKey: (0, _utils.certToPEM)(key.x5c[0])\n            };\n          } else {\n            return {\n              kid: key.kid,\n              nbf: key.nbf,\n              rsaPublicKey: (0, _utils.rsaPublicKeyToPEM)(key.n, key.e)\n            };\n          }\n        });\n\n        if (!signingKeys.length) {\n          return cb(new _JwksError2.default('The JWKS endpoint did not contain any signing keys'));\n        }\n\n        _this3.logger('Signing Keys:', signingKeys);\n\n        return cb(null, signingKeys);\n      });\n    }\n  }]);\n\n  return JwksClient;\n}();","map":null,"metadata":{},"sourceType":"script"}