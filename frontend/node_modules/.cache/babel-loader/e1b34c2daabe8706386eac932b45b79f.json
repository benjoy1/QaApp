{"ast":null,"code":"var _jsxFileName = \"/Users/sc-bjoyce-osx/training/qa-app/frontend/src/Question/Question.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: null\n    };\n  }\n\n  async componentDidMount() {\n    const params = this.props.match.params;\n    const question = (await axios.get('http://localhost:8081/${params.questionId}')).data;\n    this.setState({\n      question\n    });\n  }\n\n  render() {\n    const question = this.state.question;\n    if (question === null) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Loading ...\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, question.title), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, question.description), React.createElement(\"hr\", {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Answers\"), question.answers.map((answer, idx) => React.createElement(\"p\", {\n      className: \"lead\",\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, answer.answer)))));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/sc-bjoyce-osx/training/qa-app/frontend/src/Question/Question.js"],"names":["React","Component","axios","Question","constructor","props","state","question","componentDidMount","params","match","get","data","setState","render","title","description","answers","map","answer","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAED,QAAMC,iBAAN,GAA0B;AAAA,UACLC,MADK,GACQ,KAAKJ,KADb,CACdK,KADc,CACLD,MADK;AAEtB,UAAMF,QAAQ,GAAG,CAAC,MAAML,KAAK,CAACS,GAAN,CAAU,4CAAV,CAAP,EAAgEC,IAAjF;AACA,SAAKC,QAAL,CAAc;AACVN,MAAAA;AADU,KAAd;AAGH;;AAEDO,EAAAA,MAAM,GAAG;AAAA,UACEP,QADF,GACc,KAAKD,KADnB,CACEC,QADF;AAEL,QAAIA,QAAQ,KAAK,IAAjB,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACvB,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,QAAQ,CAACQ,KAApC,CADJ,EAEI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBR,QAAQ,CAACS,WAA9B,CAFJ,EAGI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAMQT,QAAQ,CAACU,OAAT,CAAiBC,GAAjB,CAAqB,CAACC,MAAD,EAASC,GAAT,KACjB;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,MAAM,CAACA,MAAtC,CADJ,CANR,CADJ,CADJ,CADJ;AAiBH;;AApC4B;;AAuCjC,eAAehB,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass Question extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: null,\n        };\n    }\n\n    async componentDidMount() {\n        const { match: { params } } = this.props;\n        const question = (await axios.get('http://localhost:8081/${params.questionId}')).data;\n        this.setState({\n            question,\n        })\n    }\n\n    render() {\n        const {question} = this.state;\n        if (question === null) return <p>Loading ...</p>;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"jumbotron col-12\">\n                        <h1 className=\"display-3\">{question.title}</h1>\n                        <p className=\"lead\">{question.description}</p>\n                        <hr className=\"my-4\" />\n                        <p>Answers</p>\n                        {\n                            question.answers.map((answer, idx) => (\n                                <p className=\"lead\" key={idx}>{answer.answer}</p>\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}