{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (client) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options,\n      _ref$jwksRequestsPerM = _ref.jwksRequestsPerMinute,\n      jwksRequestsPerMinute = _ref$jwksRequestsPerM === undefined ? 10 : _ref$jwksRequestsPerM;\n\n  var logger = (0, _debug2.default)('jwks');\n  var getSigningKey = client.getSigningKey;\n  var limiter = new _limiter.RateLimiter(jwksRequestsPerMinute, 'minute', true);\n  logger('Configured rate limiting to JWKS endpoint at ' + jwksRequestsPerMinute + '/minute');\n  return function (kid, cb) {\n    limiter.removeTokens(1, function (err, remaining) {\n      if (err) {\n        return cb(err);\n      }\n\n      logger('Requests to the JWKS endpoint available for the next minute:', remaining);\n\n      if (remaining < 0) {\n        logger('Too many requests to the JWKS endpoint');\n        return cb(new _JwksRateLimitError2.default('Too many requests to the JWKS endpoint'));\n      } else {\n        return getSigningKey(kid, cb);\n      }\n    });\n  };\n};\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _limiter = require('limiter');\n\nvar _JwksRateLimitError = require('../errors/JwksRateLimitError');\n\nvar _JwksRateLimitError2 = _interopRequireDefault(_JwksRateLimitError);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","map":null,"metadata":{},"sourceType":"script"}