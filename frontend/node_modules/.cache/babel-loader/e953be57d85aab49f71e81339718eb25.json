{"ast":null,"code":"var _jsxFileName = \"/Users/sc-bjoyce-osx/training/qa-app/frontend/src/Question/Question.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SubmitAnswer from './SubmitAnswer';\nimport auth0Client from '../Auth';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: null\n    };\n    this.submitAnswer = this.submitAnswer.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.refreshQuestion();\n  }\n\n  async refreshQuestion() {\n    const params = this.props.match.params;\n    const question = (await axios.get('http://localhost:8081/${params.questionId}')).data;\n    this.setState({\n      question\n    });\n  }\n\n  async submitAnswer(answer) {\n    await axios.post(\"http://localhost:8081/answer/\".concat(this.state.question.id), {\n      answer\n    }, {\n      headers: {\n        'Authorization': \"Bearer \".concat(auth0Client.getIdToken())\n      }\n    });\n    await this.refreshQuestion();\n  } // async componentDidMount() {\n  //   const { match: { params } } = this.props;\n  //   const question = (await axios.get(`http://localhost:8081/${params.questionId}`)).data;\n  //   this.setState({\n  //     question,\n  //   });\n  // }\n\n\n  render() {\n    const question = this.state.question;\n    if (question === null) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Loading ...\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, question.title), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, question.description), React.createElement(\"hr\", {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(SubmitAnswer, {\n      questionId: question.id,\n      submitAnswer: this.submitAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Answers:\"), question.answers.map((answer, idx) => React.createElement(\"p\", {\n      className: \"lead\",\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, answer.answer)))));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/sc-bjoyce-osx/training/qa-app/frontend/src/Question/Question.js"],"names":["React","Component","axios","SubmitAnswer","auth0Client","Question","constructor","props","state","question","submitAnswer","bind","componentDidMount","refreshQuestion","params","match","get","data","setState","answer","post","id","headers","getIdToken","render","title","description","answers","map","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,SAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAM,KAAKC,eAAL,EAAN;AACD;;AAED,QAAMA,eAAN,GAAwB;AAAA,UACLC,MADK,GACQ,KAAKP,KADb,CACdQ,KADc,CACLD,MADK;AAEtB,UAAML,QAAQ,GAAG,CAAC,MAAMP,KAAK,CAACc,GAAN,CAAU,4CAAV,CAAP,EAAgEC,IAAjF;AACA,SAAKC,QAAL,CAAc;AACZT,MAAAA;AADY,KAAd;AAGD;;AAED,QAAMC,YAAN,CAAmBS,MAAnB,EAA2B;AACzB,UAAMjB,KAAK,CAACkB,IAAN,wCAA2C,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,EAA/D,GAAqE;AACzEF,MAAAA;AADyE,KAArE,EAEH;AACDG,MAAAA,OAAO,EAAE;AAAE,0CAA2BlB,WAAW,CAACmB,UAAZ,EAA3B;AAAF;AADR,KAFG,CAAN;AAKA,UAAM,KAAKV,eAAL,EAAN;AACD,GA7B8B,CA+B/B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAW,EAAAA,MAAM,GAAG;AAAA,UACAf,QADA,GACY,KAAKD,KADjB,CACAC,QADA;AAEP,QAAIA,QAAQ,KAAK,IAAjB,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACvB,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,QAAQ,CAACgB,KAApC,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBhB,QAAQ,CAACiB,WAA9B,CAFF,EAGE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAEjB,QAAQ,CAACY,EAAnC;AAAuC,MAAA,YAAY,EAAE,KAAKX,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAOID,QAAQ,CAACkB,OAAT,CAAiBC,GAAjB,CAAqB,CAACT,MAAD,EAASU,GAAT,KACnB;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BV,MAAM,CAACA,MAAtC,CADF,CAPJ,CADF,CADF,CADF;AAkBD;;AA5D8B;;AA+DjC,eAAed,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport SubmitAnswer from './SubmitAnswer';\nimport auth0Client from '../Auth';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: null,\n    };\n\n    this.submitAnswer = this.submitAnswer.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.refreshQuestion();\n  }\n\n  async refreshQuestion() {\n    const { match: { params } } = this.props;\n    const question = (await axios.get('http://localhost:8081/${params.questionId}')).data;\n    this.setState({\n      question,\n    });\n  }\n\n  async submitAnswer(answer) {\n    await axios.post(`http://localhost:8081/answer/${this.state.question.id}`, {\n      answer,\n    }, {\n      headers: { 'Authorization': `Bearer ${auth0Client.getIdToken()}` }\n    });\n    await this.refreshQuestion();\n  }\n\n  // async componentDidMount() {\n  //   const { match: { params } } = this.props;\n  //   const question = (await axios.get(`http://localhost:8081/${params.questionId}`)).data;\n  //   this.setState({\n  //     question,\n  //   });\n  // }\n\n  render() {\n    const {question} = this.state;\n    if (question === null) return <p>Loading ...</p>;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-12\">\n            <h1 className=\"display-3\">{question.title}</h1>\n            <p className=\"lead\">{question.description}</p>\n            <hr className=\"my-4\" />\n            <SubmitAnswer questionId={question.id} submitAnswer={this.submitAnswer} />\n            <p>Answers:</p>\n            {\n              question.answers.map((answer, idx) => (\n                <p className=\"lead\" key={idx}>{answer.answer}</p>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}